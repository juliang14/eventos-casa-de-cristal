DELIMITER &
CREATE PROCEDURE PR_CREAR_PAGO_CARRITO( 
	  P_PAQUETE_IDPAQUETE 	INT
    , P_USUARIOID_USUARIO 	INT
    , P_CIUDAD 				VARCHAR (60)
    , P_BARRIO 				VARCHAR (60)
    , P_DIRECCION			VARCHAR (100)
    , P_FECHA_INICIO_EVENTO DATETIME
    , P_FECHA_FIN_EVENTO	DATETIME
    , P_VALOR_PAGO			INT
)

BEGIN
    -- Declarar variables
	
    DECLARE V_CLAVE_TRANSACCION				VARCHAR (80) DEFAULT 'Llave por defaul';
    DECLARE V_PAYPAL_DATOS					VARCHAR (80) DEFAULT 'Datos de pago defaul';
    DECLARE V_ESTADO  						VARCHAR (30) DEFAULT 'PAGADO';
    DECLARE V_ID_PAQUETE	 				INT;
	DECLARE V_ID_USUARIO 					INT;
    DECLARE V_ID_FACTURA 					INT;
    DECLARE V_VALOR_SIN_IVA					INT;
    DECLARE V_IVA		 					INT;
    DECLARE V_VALOR_TOTAL 					INT;
    DECLARE V_CIUDAD						VARCHAR (80) DEFAULT UPPER(P_CIUDAD);
    DECLARE V_BARRIO						VARCHAR (80) DEFAULT UPPER(P_BARRIO);
    DECLARE V_DIRECCION						VARCHAR (80) DEFAULT UPPER(P_DIRECCION);
    DECLARE V_TIPO_DE_FACTURA				VARCHAR (50) DEFAULT 'ELECTRONICA';
	DECLARE V_DESCRIPCION_FACTURA			VARCHAR (80);
    DECLARE V_ID_TIPO_PAGO					INT DEFAULT 5;
    DECLARE V_ESTADO_PEDIDO					INT DEFAULT 1;
    DECLARE V_ID_PEDIDO						INT;
    DECLARE V_CANTIDAD_PAQUETE				INT;
    DECLARE V_CANTIDAD_USUARIO				INT;
    
    
    -- Validar si existe el paquete
    SELECT COUNT(ID_PAQUETE), ID_PAQUETE, VALOR_PAQUETE, VALOR_IVA, VALOR_TOTAL, TIPO_DE_PAQUETE
    INTO V_CANTIDAD_PAQUETE,V_ID_PAQUETE, V_VALOR_SIN_IVA,  V_IVA, V_VALOR_TOTAL, V_DESCRIPCION_FACTURA
    FROM (SELECT ID_PAQUETE, VALOR_PAQUETE, VALOR_IVA, VALOR_TOTAL, TIPO_DE_PAQUETE FROM PAQUETE WHERE ID_PAQUETE = P_PAQUETE_IDPAQUETE) AS ID_PAQUETE;
    
    IF V_CANTIDAD_PAQUETE = 1 THEN
 
		-- Validar si existe el usuario
		SELECT COUNT(ID_USUARIO), ID_USUARIO INTO V_CANTIDAD_USUARIO, V_ID_USUARIO FROM USUARIO WHERE ID_USUARIO = P_USUARIOID_USUARIO;
		
        IF V_CANTIDAD_USUARIO = 1 THEN
       
			
            -- Crear factura del pedido

			INSERT INTO FACTURA( VALOR_SIN_IVA, IVA, VALOR_TOTAL, TIPO_DE_FACTURA, DESCRIPCION_FACTURA)
			VALUES
			(V_VALOR_SIN_IVA,  V_IVA, V_VALOR_TOTAL, V_TIPO_DE_FACTURA, V_DESCRIPCION_FACTURA)
			;
			
			-- Validar la factura generada
			SELECT ID_FACTURA INTO V_ID_FACTURA FROM (SELECT MAX(ID_FACTURA) AS ID_FACTURA FROM FACTURA) AS ID_FACTURA;
			
			INSERT INTO Pedido( Fecha_pedido, Fecha_inicio_evento, Fecha_fin_evento, Ciudad_evento, Barrio_evento, Direccion_evento, Paquete_Idpaquete, UsuarioId_usuario, EstadopedidoId_estadopedido, FacturaId_factura)
			VALUES
			(sysdate(), P_FECHA_INICIO_EVENTO, P_FECHA_FIN_EVENTO, V_CIUDAD, V_BARRIO, V_DIRECCION, V_ID_PAQUETE, V_ID_USUARIO, V_ESTADO_PEDIDO, V_ID_FACTURA)
			;
			
			-- Traer ultimo registro de pedidos
			SELECT MAX(ID_PEDIDO) INTO V_ID_PEDIDO FROM PEDIDO WHERE ID_PEDIDO >0;
			
			insert into Turno( Fecha_inicio_turno, Fecha_fin_turno, PedidoId_pedido)
			values 
			( P_FECHA_INICIO_EVENTO, P_FECHA_FIN_EVENTO, V_ID_PEDIDO);
            
            -- INSERTAR EN LA TABLA DE PAGO
            insert into pagos( Id_pago, UsuarioId_usuario, PedidoId_pedido, Tipos_de_pagoId_tipo_pago, Total_pago, Clave_transaccional, PaypalDatos, estado)
			values
			( null, P_USUARIOID_USUARIO,	V_ID_PEDIDO, V_ID_TIPO_PAGO, P_VALOR_PAGO, V_CLAVE_TRANSACCION, V_PAYPAL_DATOS, V_ESTADO );
        
        END IF;
		    
    END IF;
 
    
END &
